test compile
set enable_pcc=true
set opt_level=speed
target x86_64

function u0:0(i64 vmctx, i64) fast {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned readonly gv0+8
    gv2 = load.i64 notrap aligned gv1
    gv3 ! mem(mt0, 0x0, 0x0) = vmctx
    gv4 ! mem(mt1, 0x0, 0x0) = load.i64 notrap aligned readonly checked gv3+80
    mt0 = struct 88 { 80: i64 readonly ! mem(mt1, 0x0, 0x0) }
    mt1 = memory 0x180000000
    sig0 = (i64 vmctx) system_v
    sig1 = (i64 vmctx, i32 uext) system_v
    sig2 = (i64 vmctx, i32 uext, i32 uext, i32 uext) -> i32 uext system_v
    const0 = 0x02030077ff00ff04030077ff6cff5503
    stack_limit = gv2

block0(v0: i64, v1: i64):
    v2 = iconst.i32 0
    v25 -> v2
    v45 -> v2
    v24 -> v25
    v3 = iconst.i64 0
    v4 = global_value.i64 gv3
    v5 = load.i64 notrap aligned v4+8
    v17 -> v5
    v44 -> v5
    v42 -> v17
    v6 = load.i64 notrap aligned v5+8
    v7 = iadd_imm v6, 1
    v8 = iconst.i64 0
    v9 = icmp sge v7, v8  ; v8 = 0
    brif v9, block2, block3(v7)

block2:
    store.i64 notrap aligned v7, v5+8
    v10 = global_value.i64 gv3
    v11 = load.i64 notrap aligned readonly v10+56
    v12 = load.i64 notrap aligned readonly v11+120
    call_indirect sig0, v12(v10)
    v13 = load.i64 notrap aligned v5+8
    jump block3(v13)

block3(v43: i64):
    v15 -> v43
    jump block4

block4:
    v14 = iconst.i64 0
    v16 = icmp.i64 sge v15, v14  ; v14 = 0
    brif v16, block6, block7(v15)

block6:
    store.i64 notrap aligned v15, v17+8
    v18 = global_value.i64 gv3
    v19 = load.i64 notrap aligned readonly v18+56
    v20 = load.i64 notrap aligned readonly v19+120
    call_indirect sig0, v20(v18)
    v21 = load.i64 notrap aligned v17+8
    jump block7(v21)

block7(v40: i64):
    v22 = vconst.i8x16 const0
    v23 = uwiden_high v22  ; v22 = const0
    v26 = bitcast.i8x16 little v23
    v27 = sshr v26, v25  ; v25 = 0
    v28 = bitcast.i64x2 little v27
    v29 = extractlane v28, 1
    v30 = iconst.i32 1
    v31 = global_value.i64 gv3
    v32 = load.i64 notrap aligned readonly v31+56
    v33 = load.i64 notrap aligned readonly v32+24
    call_indirect sig1, v33(v31, v30)  ; v30 = 1
    v34 = ireduce.i32 v29
    v35 ! range(64, 0x0, 0xffffffff) = uextend.i64 v34
    v36 ! mem(mt1, 0x0, 0x0) = global_value.i64 gv4
    v37 ! mem(mt1, 0x0, 0xffffffff) = iadd v36, v35
    v38 = load.f64 little checked heap v37
    v39 = f64const 0x0.0000000005b28p-1022
    v41 = iadd_imm v40, 9
    store notrap aligned v41, v17+8
    trap unreachable
}
