test interpret
test run
set enable_llvm_abi_extensions
target x86_64
target aarch64
target riscv64

function %select_icmp_i8_f128(i8, f128, f128) -> f128 {
block0(v0: i8, v1: f128, v2: f128):
  v3 = iconst.i8 42
  v4 = icmp eq v0, v3
  v5 = select.f128 v4, v1, v2
  return v5
}
; run: %select_icmp_i8_f128(42, 0x0.0, 0x1.0) == 0x0.0
; run: %select_icmp_i8_f128(10, 0x0.0, 0x1.0) == 0x1.0
; run: %select_icmp_i8_f128(42, +Inf, -Inf) == +Inf
; run: %select_icmp_i8_f128(10, +Inf, -Inf) == -Inf
; run: %select_icmp_i8_f128(42, +NaN, -NaN) == +NaN
; run: %select_icmp_i8_f128(10, +NaN, -NaN) == -NaN
; run: %select_icmp_i8_f128(42, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == 0x0.8000000000000000000000000000p-16382
; run: %select_icmp_i8_f128(10, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == -0x0.8000000000000000000000000000p-16382

function %select_icmp_i16_f128(i16, f128, f128) -> f128 {
block0(v0: i16, v1: f128, v2: f128):
  v3 = iconst.i16 42
  v4 = icmp eq v0, v3
  v5 = select.f128 v4, v1, v2
  return v5
}
; run: %select_icmp_i16_f128(42, 0x0.0, 0x1.0) == 0x0.0
; run: %select_icmp_i16_f128(10, 0x0.0, 0x1.0) == 0x1.0
; run: %select_icmp_i16_f128(42, +Inf, -Inf) == +Inf
; run: %select_icmp_i16_f128(10, +Inf, -Inf) == -Inf
; run: %select_icmp_i16_f128(42, +NaN, -NaN) == +NaN
; run: %select_icmp_i16_f128(10, +NaN, -NaN) == -NaN
; run: %select_icmp_i16_f128(42, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == 0x0.8000000000000000000000000000p-16382
; run: %select_icmp_i16_f128(10, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == -0x0.8000000000000000000000000000p-16382


function %select_icmp_i32_f128(i32, f128, f128) -> f128 {
block0(v0: i32, v1: f128, v2: f128):
  v3 = iconst.i32 42
  v4 = icmp eq v0, v3
  v5 = select.f128 v4, v1, v2
  return v5
}
; run: %select_icmp_i32_f128(42, 0x0.0, 0x1.0) == 0x0.0
; run: %select_icmp_i32_f128(10, 0x0.0, 0x1.0) == 0x1.0
; run: %select_icmp_i32_f128(42, +Inf, -Inf) == +Inf
; run: %select_icmp_i32_f128(10, +Inf, -Inf) == -Inf
; run: %select_icmp_i32_f128(42, +NaN, -NaN) == +NaN
; run: %select_icmp_i32_f128(10, +NaN, -NaN) == -NaN
; run: %select_icmp_i32_f128(42, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == 0x0.8000000000000000000000000000p-16382
; run: %select_icmp_i32_f128(10, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == -0x0.8000000000000000000000000000p-16382

function %select_icmp_i64_f128(i64, f128, f128) -> f128 {
block0(v0: i64, v1: f128, v2: f128):
  v3 = iconst.i64 42
  v4 = icmp eq v0, v3
  v5 = select.f128 v4, v1, v2
  return v5
}
; run: %select_icmp_i64_f128(42, 0x0.0, 0x1.0) == 0x0.0
; run: %select_icmp_i64_f128(10, 0x0.0, 0x1.0) == 0x1.0
; run: %select_icmp_i64_f128(42, +Inf, -Inf) == +Inf
; run: %select_icmp_i64_f128(10, +Inf, -Inf) == -Inf
; run: %select_icmp_i64_f128(42, +NaN, -NaN) == +NaN
; run: %select_icmp_i64_f128(10, +NaN, -NaN) == -NaN
; run: %select_icmp_i64_f128(42, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == 0x0.8000000000000000000000000000p-16382
; run: %select_icmp_i64_f128(10, 0x0.8000000000000000000000000000p-16382, -0x0.8000000000000000000000000000p-16382) == -0x0.8000000000000000000000000000p-16382
