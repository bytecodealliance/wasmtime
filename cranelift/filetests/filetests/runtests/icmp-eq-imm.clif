test interpret
test run
target aarch64
target x86_64
target s390x
target riscv64
target riscv64 has_c has_zcb
target pulley32
target pulley32be
target pulley64
target pulley64be

function %icmp_imm_eq_i8(i8) -> i8 {
block0(v0: i8):
    v1 = icmp_imm eq v0, 0x44
    return v1
}
; run: %icmp_imm_eq_i8(0) == 0
; run: %icmp_imm_eq_i8(-1) == 0
; run: %icmp_imm_eq_i8(0x44) == 1

function %icmp_neg_eq_i8(i8) -> i8 {
block0(v0: i8):
    v1 = icmp_imm eq v0, 0xf4
    return v1
}
; run: %icmp_neg_eq_i8(0) == 0
; run: %icmp_neg_eq_i8(-1) == 0
; run: %icmp_neg_eq_i8(0xf4) == 1

function %icmp_imm_eq_i16(i16) -> i8 {
block0(v0: i16):
    v1 = icmp_imm eq v0, 0x4444
    return v1
}
; run: %icmp_imm_eq_i16(0) == 0
; run: %icmp_imm_eq_i16(-1) == 0
; run: %icmp_imm_eq_i16(0x4444) == 1

function %icmp_neg_eq_i16(i16) -> i8 {
block0(v0: i16):
    v1 = icmp_imm eq v0, 0xff44
    return v1
}
; run: %icmp_neg_eq_i16(0) == 0
; run: %icmp_neg_eq_i16(-1) == 0
; run: %icmp_neg_eq_i16(0xff44) == 1

function %icmp_imm_eq_i32(i32) -> i8 {
block0(v0: i32):
    v1 = icmp_imm eq v0, 0x4444_4444
    return v1
}
; run: %icmp_imm_eq_i32(0) == 0
; run: %icmp_imm_eq_i32(-1) == 0
; run: %icmp_imm_eq_i32(0x4444_4444) == 1

function %icmp_neg_eq_i32(i32) -> i8 {
block0(v0: i32):
    v1 = icmp_imm eq v0, 0xffff_4444
    return v1
}
; run: %icmp_neg_eq_i32(0) == 0
; run: %icmp_neg_eq_i32(-1) == 0
; run: %icmp_neg_eq_i32(0xffff_4444) == 1

function %icmp_imm_eq_i64(i64) -> i8 {
block0(v0: i64):
    v1 = icmp_imm eq v0, 0x4444_4444_4444_4444
    return v1
}
; run: %icmp_imm_eq_i64(0) == 0
; run: %icmp_imm_eq_i64(-1) == 0
; run: %icmp_imm_eq_i64(0x4444_4444_4444_4444) == 1

function %icmp_neg_eq_i64(i64) -> i8 {
block0(v0: i64):
    v1 = icmp_imm eq v0, 0xffff_ffff_4444_4444
    return v1
}
; run: %icmp_neg_eq_i64(0) == 0
; run: %icmp_neg_eq_i64(-1) == 0
; run: %icmp_neg_eq_i64(0xffff_ffff_4444_4444) == 1
