test run
set enable_multi_ret_implicit_sret
set enable_llvm_abi_extensions
target x86_64
target x86_64 has_avx
target aarch64
target riscv64 has_v
target riscv64 has_v has_c has_zcb
target s390x

function %bitcast_i64x2_to_i128(i64x2) -> i128 {
block0(v0: i64x2):
    v1 = bitcast.i128 little v0
    return v1
}
; run: %bitcast_i64x2_to_i128([0xBEEF 0xC0FFEE]) == 0x0000000000c0ffee_000000000000beef
; run: %bitcast_i64x2_to_i128([-1 127]) == 0x000000000000007f_ffffffffffffffff


function %bitcast_i128_to_i64x2(i128) -> i64x2 {
block0(v0: i128):
    v1 = bitcast.i64x2 little v0
    return v1
}
; run: %bitcast_i128_to_i64x2(0x0000000000c0ffee_000000000000beef) == [0xBEEF 0xC0FFEE]
; run: %bitcast_i128_to_i64x2(0x000000000000007f_ffffffffffffffff) == [-1 127]

function %bitcast_i64x2_to_f128(i64x2) -> f128 {
block0(v0: i64x2):
    v1 = bitcast.f128 little v0
    return v1
}
; run: %bitcast_i64x2_to_f128([0xBEEF 0xC0FFEE]) == 0x0.000000c0ffee000000000000beefp-16382
; run: %bitcast_i64x2_to_f128([-1 127]) == 0x0.00000000007fffffffffffffffffp-16382


function %bitcast_f128_to_i64x2(f128) -> i64x2 {
block0(v0: f128):
    v1 = bitcast.i64x2 little v0
    return v1
}
; run: %bitcast_f128_to_i64x2(0x0.000000c0ffee000000000000beefp-16382) == [0xBEEF 0xC0FFEE]
; run: %bitcast_f128_to_i64x2(0x0.00000000007fffffffffffffffffp-16382) == [-1 127]
