test run
test interpret
target aarch64
target s390x
target x86_64 has_sse3 has_ssse3 has_sse41
target x86_64 has_sse3 has_ssse3 has_sse41 has_avx
set enable_multi_ret_implicit_sret
target riscv64 has_v
target riscv64 has_v has_c has_zcb
target pulley32
target pulley32be
target pulley64
target pulley64be

function %scalartovector_i32(i32) -> i32x4 {
block0(v0: i32):
    v1 = scalar_to_vector.i32x4 v0
    return v1
}
; run: %scalartovector_i32(1) == [1 0 0 0]
; run: %scalartovector_i32(4294967295) == [4294967295 0 0 0]

function %scalartovector_i32_imm(i32) -> i32x4 {
block0(v0: i32):
    v1 = iconst.i32 7
    v2 = scalar_to_vector.i32x4 v1
    return v2
}
; run: %scalartovector_i32_imm(1) == [7 0 0 0]

function %scalartovector_i64(i64) -> i64x2 {
block0(v0: i64):
    v1 = scalar_to_vector.i64x2 v0
    return v1
}
; run: %scalartovector_i64(0) == [0 0]
; run: %scalartovector_i64(1) == [1 0]
; run: %scalartovector_i64(18446744073709551615) == [18446744073709551615 0]

function %scalartovector_i64_imm(i64) -> i64x2 {
block0(v0: i64):
    v1 = iconst.i64 7
    v2 = scalar_to_vector.i64x2 v1
    return v2
}
; run: %scalartovector_i64_imm(1) == [7 0]

function %scalartovector_f32(f32) -> f32x4 {
block0(v0: f32):
    v1 = scalar_to_vector.f32x4 v0
    return v1
}
; run: %scalartovector_f32(0x1.0) == [0x1.0 0x0.0 0x0.0 0x0.0]
; run: %scalartovector_f32(0x0.1) == [0x0.1 0x0.0 0x0.0 0x0.0]
; run: %scalartovector_f32(NaN) == [NaN 0x0.0 0x0.0 0x0.0]
; run: %scalartovector_f32(-0x0.0) == [-0x0.0 0x0.0 0x0.0 0x0.0]
; run: %scalartovector_f32(0x0.0) == [0x0.0 0x0.0 0x0.0 0x0.0]

function %scalartovector_f64(f64) -> f64x2 {
block0(v0: f64):
    v1 = scalar_to_vector.f64x2 v0
    return v1
}
; run: %scalartovector_f64(0x1.0) == [0x1.0 0x0.0]
; run: %scalartovector_f64(0x0.1) == [0x0.1 0x0.0]
; run: %scalartovector_f64(NaN) == [NaN 0x0.0]
; run: %scalartovector_f64(-0x0.0) == [-0x0.0 0x0.0]
; run: %scalartovector_f64(0x0.0) == [0x0.0 0x0.0]
