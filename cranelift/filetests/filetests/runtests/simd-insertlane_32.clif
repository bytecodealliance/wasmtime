test interpret
test run
target pulley32
target pulley32be

function %insertlane_i8x16_through_stack(i8x16, i8) -> i8x16 {
    ss0 = explicit_slot 8
block0(v0: i8x16, v1: i8):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.i8 v2
    v4 = insertlane v0, v3, 1
    return v4
}
; run: %insertlane_i8x16_through_stack([1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1], 2) == [1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1]

function %insertlane_i16x8_through_stack(i16x8, i16) -> i16x8 {
    ss0 = explicit_slot 8
block0(v0: i16x8, v1: i16):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.i16 v2
    v4 = insertlane v0, v3, 2
    return v4
}
; run: %insertlane_i16x8_through_stack([1 1 1 1 1 1 1 1], 2) == [1 1 2 1 1 1 1 1]

function %insertlane_i32x4_through_stack(i32x4, i32) -> i32x4 {
    ss0 = explicit_slot 8
block0(v0: i32x4, v1: i32):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.i32 v2
    v4 = insertlane v0, v3, 3
    return v4
}
; run: %insertlane_i32x4_through_stack([1 1 1 1], 2) == [1 1 1 2]

function %insertlane_i64x2_through_stack(i64x2, i64) -> i64x2 {
    ss0 = explicit_slot 8
block0(v0: i64x2, v1: i64):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.i64 v2
    v4 = insertlane v0, v3, 0
    return v4
}
; run: %insertlane_i64x2_through_stack([1 1], 2) == [2 1]

function %insertlane_f32x4_through_stack(f32x4, f32) -> f32x4 {
    ss0 = explicit_slot 8
block0(v0: f32x4, v1: f32):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.f32 v2
    v4 = insertlane v0, v3, 3
    return v4
}
; run: %insertlane_f32x4_through_stack([0x1.0 0x1.0 0x1.0 0x1.0], 0x2.0) == [0x1.0 0x1.0 0x1.0 0x2.0]

function %insertlane_f32x4_through_stack2(f32x4, f32) -> f32x4 {
    ss0 = explicit_slot 8
block0(v0: f32x4, v1: f32):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.f32 v2
    v4 = insertlane v0, v3, 0
    return v4
}
; run: %insertlane_f32x4_through_stack2([0x1.0 0x1.0 0x1.0 0x1.0], 0x2.0) == [0x2.0 0x1.0 0x1.0 0x1.0]

function %insertlane_f64x2_through_stack(f64x2, f64) -> f64x2 {
    ss0 = explicit_slot 8
block0(v0: f64x2, v1: f64):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.f64 v2
    v4 = insertlane v0, v3, 0
    return v4
}
; run: %insertlane_f64x2_through_stack([0x1.0 0x1.0], 0x2.0) == [0x2.0 0x1.0]

function %insertlane_f64x2_through_stack2(f64x2, f64) -> f64x2 {
    ss0 = explicit_slot 8
block0(v0: f64x2, v1: f64):
    v2 = stack_addr.i32 ss0
    store v1, v2
    v3 = load.f64 v2
    v4 = insertlane v0, v3, 1
    return v4
}
; run: %insertlane_f64x2_through_stack2([0x1.0 0x1.0], 0x2.0) == [0x1.0 0x2.0]

