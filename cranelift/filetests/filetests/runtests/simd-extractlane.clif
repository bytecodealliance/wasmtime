test interpret
test run
target aarch64
target s390x
target x86_64
target x86_64 sse41
target x86_64 sse42
target x86_64 sse42 has_avx
set enable_multi_ret_implicit_sret
target riscv64 has_v
target riscv64 has_v has_c has_zcb
target pulley32
target pulley32be
target pulley64
target pulley64be

function %extractlane_4(i8x16) -> i8 {
block0(v0: i8x16):
    v1 = extractlane v0, 4
    return v1
}
; run: %extractlane_4([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]) == 5

function %extractlane_7(i16x8) -> i16 {
block0(v0: i16x8):
    v1 = extractlane v0, 7
    return v1
}
; run: %extractlane_7([65528 65529 65530 65531 65532 65533 65534 65535]) == 65535

function %extractlane_0(i32x4) -> i32 {
block0(v0: i32x4):
    v1 = extractlane v0, 0
    return v1
}
; run: %extractlane_0([0 1 2 3]) == 0


function %extractlane_1(i64x2) -> i64 {
block0(v0: i64x2):
    v1 = extractlane v0, 1
    return v1
}
; run: %extractlane_1([0 4294967297]) == 4294967297

function %extractlane_i8x16_through_stack(i8x16) -> i8 {
    ss0 = explicit_slot 8
block0(v0: i8x16):
    v2 = stack_addr.i64 ss0
    v3 = extractlane v0, 1
    store v3, v2
    v4 = load.i8 v2
    return v4
}
; run: %extractlane_i8x16_through_stack([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]) == 2

function %extractlane_i16x8_through_stack(i16x8) -> i16 {
    ss0 = explicit_slot 8
block0(v0: i16x8):
    v2 = stack_addr.i64 ss0
    v3 = extractlane v0, 2
    store v3, v2
    v4 = load.i16 v2
    return v4
}
; run: %extractlane_i16x8_through_stack([1 2 3 4 5 6 7 8]) == 3

function %extractlane_i32x4_through_stack(i32x4) -> i32 {
    ss0 = explicit_slot 8
block0(v0: i32x4):
    v2 = stack_addr.i64 ss0
    v3 = extractlane v0, 3
    store v3, v2
    v4 = load.i32 v2
    return v4
}
; run: %extractlane_i32x4_through_stack([1 2 3 4]) == 4

function %extractlane_i64x2_through_stack(i64x2) -> i64 {
    ss0 = explicit_slot 8
block0(v0: i64x2):
    v2 = stack_addr.i64 ss0
    v3 = extractlane v0, 0
    store v3, v2
    v4 = load.i64 v2
    return v4
}
; run: %extractlane_i64x2_through_stack([1 2]) == 1

function %extractlane_f32x4_through_stack(f32x4) -> f32 {
    ss0 = explicit_slot 8
block0(v0: f32x4):
    v2 = stack_addr.i64 ss0
    v3 = extractlane v0, 3
    store v3, v2
    v4 = load.f32 v2
    return v4
}
; run: %extractlane_f32x4_through_stack([0x1.0 0x2.0 0x3.0 0x4.0]) == 0x4.0

function %extractlane_f64x2_through_stack(f64x2) -> f64 {
    ss0 = explicit_slot 8
block0(v0: f64x2):
    v2 = stack_addr.i64 ss0
    v3 = extractlane v0, 0
    store v3, v2
    v4 = load.f64 v2
    return v4
}
; run: %extractlane_f64x2_through_stack([0x1.0 0x2.0]) == 0x1.0


function %unaligned_extractlane() -> f64 {
    ss0 = explicit_slot 24

block0:
    v0 = iconst.i64 0
    stack_store.i64 v0, ss0+0
    stack_store.i64 v0, ss0+8
    stack_store.i64 v0, ss0+16

    v1 = stack_load.f64x2 ss0+1
    v2 = extractlane v1, 1
    return v2
}
; run: %unaligned_extractlane() == 0.0
