test run
target s390x
target aarch64
target x86_64 has_sse3 has_ssse3 has_sse41
target x86_64 has_sse3 has_ssse3 has_sse41 has_avx
set enable_multi_ret_implicit_sret
target riscv64 has_v
target riscv64 has_v has_c has_zcb


function %vconst_zeroes_i8x16() -> i8x16 {
block0:
    v0 = vconst.i8x16 0x00
    return v0
}
; run: %vconst_zeroes_i8x16() == [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]

function %vconst_ones_i8x16() -> i8x16 {
block0:
    v0 = vconst.i8x16 0xffffffffffffffff_ffffffffffffffff
    return v0
}
; run: %vconst_ones_i8x16() == [255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255]

function %vconst_i8x16() -> i8x16 {
block0:
    v0 = vconst.i8x16 [0 31 63 95 127 159 191 255 1 2 3 4 5 6 7 8]
    return v0
}
; run: %vconst_i8x16() == [0 31 63 95 127 159 191 255 1 2 3 4 5 6 7 8]

function %vconst_i16x8() -> i16x8 {
block0:
    v0 = vconst.i16x8 [0 255 32767 65535 1 2 3 4]
    return v0
}
; run: %vconst_i16x8() == [0 255 32767 65535 1 2 3 4]

function %vconst_i32x4() -> i32x4 {
block0:
    v0 = vconst.i32x4 [0 4294967295 1 2]
    return v0
}
; run: %vconst_i32x4() == [0 4294967295 1 2]

function %vconst_i64x2() -> i64x2 {
block0:
    v0 = vconst.i64x2 [0 -1]
    return v0
}
; run: %vconst_i64x2() == [0 -1]
