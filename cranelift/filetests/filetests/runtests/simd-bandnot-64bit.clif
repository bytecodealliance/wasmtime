test interpret
test run
target aarch64
set enable_multi_ret_implicit_sret
target riscv64 has_v
target riscv64 has_v has_c has_zcb
; s390x and x86_64 do not support 64-bit vectors.


function %band_not_i8x8(i8x8, i8x8) -> i8x8 {
block0(v0:i8x8, v1:i8x8):
    v2 = band_not v0, v1
    return v2
}
; run: %band_not_i8x8([0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10], [0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF]) == [0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10]
; run: %band_not_i8x8([0xFE 0xEE 0xFF 0xFF 0xFE 0xEE 0xFF 0xFF], [0xDF 0xDB 0xFF 0xFF 0xDF 0xDB 0xFF 0xFF]) == [0x20 0x24 0x00 0x00 0x20 0x24 0x00 0x00]


function %band_not_i16x4(i16x4, i16x4) -> i16x4 {
block0(v0:i16x4, v1:i16x4):
    v2 = band_not v0, v1
    return v2
}
; run: %band_not_i16x4([0xFEDC 0xBA98 0x7654 0x3210], [0x0123 0x4567 0x89AB 0xCDEF]) == [0xFEDC 0xBA98 0x7654 0x3210]
; run: %band_not_i16x4([0xFEEE 0xFFFF 0xFEEE 0xFFFF], [0xDFDB 0xFFFF 0xDFDB 0xFFFF]) == [0x2024 0x0000 0x2024 0x0000]


function %band_not_i32x2(i32x2, i32x2) -> i32x2 {
block0(v0:i32x2, v1:i32x2):
    v2 = band_not v0, v1
    return v2
}
; run: %band_not_i32x2([0xFEDCBA98 0x76543210], [0x01234567 0x89ABCDEF]) == [0xFEDCBA98 0x76543210]
; run: %band_not_i32x2([0xFEEEFFFF 0xFEEEFFFF], [0xDFDBFFFF 0xDFDBFFFF]) == [0x20240000 0x20240000]
