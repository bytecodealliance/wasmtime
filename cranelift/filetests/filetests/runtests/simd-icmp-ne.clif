test interpret
test run
target x86_64
target x86_64 sse41
target x86_64 sse42
target x86_64 sse42 has_avx
target aarch64
target s390x
set enable_multi_ret_implicit_sret
target riscv64 has_v
target riscv64 has_v has_c has_zcb
target pulley32
target pulley32be
target pulley64
target pulley64be

function %simd_icmp_ne_i8(i8x16, i8x16) -> i8x16 {
block0(v0: i8x16, v1: i8x16):
    v2 = icmp ne v0, v1
    return v2
}
; run: %simd_icmp_ne_i8([1 0 -1 1 1 1 1 1 1 1 1 1 1 1 1 1], [1 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0]) == [0 0 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]

function %simd_icmp_ne_i16(i16x8, i16x8) -> i16x8 {
block0(v0: i16x8, v1: i16x8):
    v2 = icmp ne v0, v1
    return v2
}
; run: %simd_icmp_ne_i16([1 0 -1 1 1 1 1 1], [1 0 -1 0 0 0 0 0]) == [0 0 0 -1 -1 -1 -1 -1]

function %simd_icmp_ne_i32(i32x4, i32x4) -> i32x4 {
block0(v0: i32x4, v1: i32x4):
    v2 = icmp ne v0, v1
    return v2
}
; run: %simd_icmp_ne_i32([1 0 -1 1], [1 0 -1 0]) == [0 0 0 -1]

function %simd_icmp_ne_i64(i64x2, i64x2) -> i64x2 {
block0(v0: i64x2, v1: i64x2):
    v2 = icmp ne v0, v1
    return v2
}
; run: %simd_icmp_ne_i64([10 0], [1 0]) == [-1 0]
; run: %simd_icmp_ne_i64([-1 1], [-1 0]) == [0 -1]


function %icmp_ne_const_i32x4() -> i8 {
block0:
    v0 = vconst.i32x4 [0 1 2 3]
    v1 = vconst.i32x4 [7 7 7 7]
    v2 = icmp ne v0, v1
    v3 = vall_true v2
    return v3
}
; run: %icmp_ne_const_i32x4() == 1


function %icmp_ne_const_i16x8() -> i8 {
block0:
    v0 = vconst.i16x8 [0 1 2 3 4 5 6 7]
    v1 = vconst.i16x8 [0 1 2 3 4 5 6 7]
    v2 = icmp ne v0, v1
    v3 = vall_true v2
    v4 = uextend.i32 v3
    v5 = icmp_imm eq v4, 0
    return v5
}
; run: %icmp_ne_const_i16x8() == 1


function %simd_icmp_ne_splat_rhs_i32(i32x4, i32) -> i32x4 {
block0(v0: i32x4, v1: i32):
    v2 = splat.i32x4 v1
    v3 = icmp ne v0, v2
    return v3
}
; run: %simd_icmp_ne_splat_rhs_i32([1 0 -1 10], 10) == [-1 -1 -1 0]

function %simd_icmp_ne_splat_const_rhs_i32(i32x4) -> i32x4 {
block0(v0: i32x4):
    v1 = iconst.i32 10
    v2 = splat.i32x4 v1
    v3 = icmp ne v0, v2
    return v3
}
; run: %simd_icmp_ne_splat_const_rhs_i32([1 0 -1 10]) == [-1 -1 -1 0]

function %simd_icmp_ne_splat_lhs_i32(i32, i32x4) -> i32x4 {
block0(v0: i32, v1: i32x4):
    v2 = splat.i32x4 v0
    v3 = icmp ne v2, v1
    return v3
}
; run: %simd_icmp_ne_splat_lhs_i32(10, [1 0 -1 10]) == [-1 -1 -1 0]

function %simd_icmp_ne_splat_const_lhs_i32(i32x4) -> i32x4 {
block0(v0: i32x4):
    v1 = iconst.i32 10
    v2 = splat.i32x4 v1
    v3 = icmp ne v2, v0
    return v3
}
; run: %simd_icmp_ne_splat_const_lhs_i32([1 0 -1 10]) == [-1 -1 -1 0]
