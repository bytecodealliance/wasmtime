test interpret
test run
target x86_64
target x86_64 has_avx
target s390x
target riscv64
target riscv64 has_c has_zcb
target pulley32
target pulley32be
target pulley64
target pulley64be

function %fcmp_uge_f32(f32, f32) -> i8 {
block0(v0: f32, v1: f32):
    v2 = fcmp uge v0, v1
    return v2
}
; run: %fcmp_uge_f32(0x0.5, 0x0.5) == 1
; run: %fcmp_uge_f32(0x1.0, 0x1.0) == 1
; run: %fcmp_uge_f32(-0x1.0, 0x1.0) == 0
; run: %fcmp_uge_f32(0x1.0, -0x1.0) == 1
; run: %fcmp_uge_f32(0x0.5, 0x1.0) == 0
; run: %fcmp_uge_f32(0x1.5, 0x2.9) == 0
; run: %fcmp_uge_f32(0x1.1p10, 0x1.4p1) == 1
; run: %fcmp_uge_f32(0x1.4cccccp0, 0x1.8p0) == 0
; run: %fcmp_uge_f32(0x1.b33334p0, 0x1.99999ap-2) == 1
; run: %fcmp_uge_f32(0x1.333334p-1, 0x1.666666p1) == 0
; run: %fcmp_uge_f32(-0x0.5, -0x1.0) == 1
; run: %fcmp_uge_f32(-0x1.5, -0x2.9) == 1
; run: %fcmp_uge_f32(-0x1.1p10, -0x1.333334p-1) == 0
; run: %fcmp_uge_f32(-0x1.99999ap-2, -0x1.4cccccp0) == 1
; run: %fcmp_uge_f32(-0x1.8p0, -0x1.b33334p0) == 1
; run: %fcmp_uge_f32(-0x1.4p1, -0x1.666666p1) == 1
; run: %fcmp_uge_f32(0x0.5, -0x1.0) == 1
; run: %fcmp_uge_f32(0x1.b33334p0, -0x1.b33334p0) == 1

; Zeroes
; run: %fcmp_uge_f32(0x0.0, 0x0.0) == 1
; run: %fcmp_uge_f32(-0x0.0, -0x0.0) == 1
; run: %fcmp_uge_f32(0x0.0, -0x0.0) == 1
; run: %fcmp_uge_f32(-0x0.0, 0x0.0) == 1

; Infinities
; run: %fcmp_uge_f32(Inf, Inf) == 1
; run: %fcmp_uge_f32(-Inf, -Inf) == 1
; run: %fcmp_uge_f32(Inf, -Inf) == 1
; run: %fcmp_uge_f32(-Inf, Inf) == 0

; Inf/Zero
; run: %fcmp_uge_f32(0x0.0, Inf) == 0
; run: %fcmp_uge_f32(-0x0.0, Inf) == 0
; run: %fcmp_uge_f32(0x0.0, -Inf) == 1
; run: %fcmp_uge_f32(-0x0.0, -Inf) == 1
; run: %fcmp_uge_f32(Inf, 0x0.0) == 1
; run: %fcmp_uge_f32(Inf, -0x0.0) == 1
; run: %fcmp_uge_f32(-Inf, 0x0.0) == 0
; run: %fcmp_uge_f32(-Inf, -0x0.0) == 0

; Epsilon / Max / Min Positive
; run: %fcmp_uge_f32(0x1.0p-23, 0x1.0p-23) == 1
; run: %fcmp_uge_f32(0x1.fffffep127, 0x1.fffffep127) == 1
; run: %fcmp_uge_f32(0x1.0p-126, 0x1.0p-126) == 1
; run: %fcmp_uge_f32(0x1.0p-23, 0x1.fffffep127) == 0
; run: %fcmp_uge_f32(0x1.0p-23, 0x1.0p-126) == 1
; run: %fcmp_uge_f32(0x1.0p-126, 0x1.fffffep127) == 0

; Subnormals
; run: %fcmp_uge_f32(0x0.800002p-126, -0x0.800002p-126) == 1
; run: %fcmp_uge_f32(-0x0.800002p-126, 0x0.800002p-126) == 0
; run: %fcmp_uge_f32(0x0.800002p-126, 0x0.0) == 1
; run: %fcmp_uge_f32(-0x0.800002p-126, 0x0.0) == 0
; run: %fcmp_uge_f32(0x0.800002p-126, -0x0.0) == 1
; run: %fcmp_uge_f32(-0x0.800002p-126, -0x0.0) == 0
; run: %fcmp_uge_f32(0x0.0, 0x0.800002p-126) == 0
; run: %fcmp_uge_f32(0x0.0, -0x0.800002p-126) == 1
; run: %fcmp_uge_f32(-0x0.0, 0x0.800002p-126) == 0
; run: %fcmp_uge_f32(-0x0.0, -0x0.800002p-126) == 1

; NaN's
; run: %fcmp_uge_f32(+NaN, +NaN) == 1
; run: %fcmp_uge_f32(-NaN, -NaN) == 1
; run: %fcmp_uge_f32(+NaN, -NaN) == 1
; run: %fcmp_uge_f32(-NaN, +NaN) == 1

; run: %fcmp_uge_f32(+NaN, -0x1.0) == 1
; run: %fcmp_uge_f32(-NaN, -0x1.0) == 1
; run: %fcmp_uge_f32(+NaN, 0x1.0) == 1
; run: %fcmp_uge_f32(-NaN, 0x1.0) == 1
; run: %fcmp_uge_f32(+NaN, -0x0.0) == 1
; run: %fcmp_uge_f32(-NaN, -0x0.0) == 1
; run: %fcmp_uge_f32(+NaN, 0x0.0) == 1
; run: %fcmp_uge_f32(-NaN, 0x0.0) == 1
; run: %fcmp_uge_f32(+NaN, -Inf) == 1
; run: %fcmp_uge_f32(-NaN, -Inf) == 1
; run: %fcmp_uge_f32(+NaN, Inf) == 1
; run: %fcmp_uge_f32(-NaN, Inf) == 1
; run: %fcmp_uge_f32(-0x0.0, +NaN) == 1
; run: %fcmp_uge_f32(-0x0.0, -NaN) == 1
; run: %fcmp_uge_f32(0x0.0, +NaN) == 1
; run: %fcmp_uge_f32(0x0.0, -NaN) == 1
; run: %fcmp_uge_f32(-Inf, +NaN) == 1
; run: %fcmp_uge_f32(-Inf, -NaN) == 1
; run: %fcmp_uge_f32(Inf, +NaN) == 1
; run: %fcmp_uge_f32(Inf, -NaN) == 1

; run: %fcmp_uge_f32(+NaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f32(-NaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f32(+NaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f32(-NaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f32(+NaN:0x1, +NaN) == 1
; run: %fcmp_uge_f32(+NaN:0x1, -NaN) == 1
; run: %fcmp_uge_f32(-NaN:0x1, -NaN) == 1
; run: %fcmp_uge_f32(-NaN:0x1, +NaN) == 1

; run: %fcmp_uge_f32(+NaN:0x80001, +NaN:0x80001) == 1
; run: %fcmp_uge_f32(-NaN:0x80001, -NaN:0x80001) == 1
; run: %fcmp_uge_f32(+NaN:0x80001, -NaN:0x80001) == 1
; run: %fcmp_uge_f32(-NaN:0x80001, +NaN:0x80001) == 1
; run: %fcmp_uge_f32(+NaN:0x80001, +NaN) == 1
; run: %fcmp_uge_f32(+NaN:0x80001, -NaN) == 1
; run: %fcmp_uge_f32(-NaN:0x80001, -NaN) == 1
; run: %fcmp_uge_f32(-NaN:0x80001, +NaN) == 1

; sNaN's
; run: %fcmp_uge_f32(+sNaN:0x1, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(+sNaN:0x1, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, +sNaN:0x1) == 1

; run: %fcmp_uge_f32(+sNaN:0x1, -0x1.0) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, -0x1.0) == 1
; run: %fcmp_uge_f32(+sNaN:0x1, 0x1.0) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, 0x1.0) == 1
; run: %fcmp_uge_f32(+sNaN:0x1, -0x0.0) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, -0x0.0) == 1
; run: %fcmp_uge_f32(+sNaN:0x1, 0x0.0) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, 0x0.0) == 1
; run: %fcmp_uge_f32(+sNaN:0x1, -Inf) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, -Inf) == 1
; run: %fcmp_uge_f32(+sNaN:0x1, Inf) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, Inf) == 1
; run: %fcmp_uge_f32(-0x0.0, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(-0x0.0, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(0x0.0, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(0x0.0, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(-Inf, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(-Inf, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(Inf, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(Inf, -sNaN:0x1) == 1

; run: %fcmp_uge_f32(+sNaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f32(+sNaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f32(-sNaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f32(+NaN:0x1, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(-NaN:0x1, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(-NaN:0x1, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(+NaN:0x1, -sNaN:0x1) == 1

; run: %fcmp_uge_f32(+sNaN:0x80001, +sNaN:0x80001) == 1
; run: %fcmp_uge_f32(-sNaN:0x80001, -sNaN:0x80001) == 1
; run: %fcmp_uge_f32(+sNaN:0x80001, -sNaN:0x80001) == 1
; run: %fcmp_uge_f32(-sNaN:0x80001, +sNaN:0x80001) == 1
; run: %fcmp_uge_f32(+sNaN:0x80001, +sNaN:0x1) == 1
; run: %fcmp_uge_f32(+sNaN:0x80001, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(-sNaN:0x80001, -sNaN:0x1) == 1
; run: %fcmp_uge_f32(-sNaN:0x80001, +sNaN:0x1) == 1


function %fcmp_uge_f64(f64, f64) -> i8 {
block0(v0: f64, v1: f64):
    v2 = fcmp uge v0, v1
    return v2
}
; run: %fcmp_uge_f64(0x0.5, 0x0.5) == 1
; run: %fcmp_uge_f64(0x1.0, 0x1.0) == 1
; run: %fcmp_uge_f64(-0x1.0, 0x1.0) == 0
; run: %fcmp_uge_f64(0x1.0, -0x1.0) == 1
; run: %fcmp_uge_f64(0x0.5, 0x1.0) == 0
; run: %fcmp_uge_f64(0x1.5, 0x2.9) == 0
; run: %fcmp_uge_f64(0x1.1p10, 0x1.4p1) == 1
; run: %fcmp_uge_f64(0x1.4cccccccccccdp0, 0x1.8p0) == 0
; run: %fcmp_uge_f64(0x1.b333333333333p0, 0x1.999999999999ap-2) == 1
; run: %fcmp_uge_f64(0x1.3333333333333p-1, 0x1.6666666666666p1) == 0
; run: %fcmp_uge_f64(-0x0.5, -0x1.0) == 1
; run: %fcmp_uge_f64(-0x1.5, -0x2.9) == 1
; run: %fcmp_uge_f64(-0x1.1p10, -0x1.3333333333333p-1) == 0
; run: %fcmp_uge_f64(-0x1.999999999999ap-2, -0x1.4cccccccccccdp0) == 1
; run: %fcmp_uge_f64(-0x1.8p0, -0x1.b333333333333p0) == 1
; run: %fcmp_uge_f64(-0x1.4p1, -0x1.6666666666666p1) == 1
; run: %fcmp_uge_f64(0x0.5, -0x1.0) == 1
; run: %fcmp_uge_f64(0x1.b333333333333p0, -0x1.b333333333333p0) == 1


; Zeroes
; run: %fcmp_uge_f64(0x0.0, 0x0.0) == 1
; run: %fcmp_uge_f64(-0x0.0, -0x0.0) == 1
; run: %fcmp_uge_f64(0x0.0, -0x0.0) == 1
; run: %fcmp_uge_f64(-0x0.0, 0x0.0) == 1

; Infinities
; run: %fcmp_uge_f64(Inf, Inf) == 1
; run: %fcmp_uge_f64(-Inf, -Inf) == 1
; run: %fcmp_uge_f64(Inf, -Inf) == 1
; run: %fcmp_uge_f64(-Inf, Inf) == 0

; Inf/Zero
; run: %fcmp_uge_f64(0x0.0, Inf) == 0
; run: %fcmp_uge_f64(-0x0.0, Inf) == 0
; run: %fcmp_uge_f64(0x0.0, -Inf) == 1
; run: %fcmp_uge_f64(-0x0.0, -Inf) == 1
; run: %fcmp_uge_f64(Inf, 0x0.0) == 1
; run: %fcmp_uge_f64(Inf, -0x0.0) == 1
; run: %fcmp_uge_f64(-Inf, 0x0.0) == 0
; run: %fcmp_uge_f64(-Inf, -0x0.0) == 0

; Epsilon / Max / Min Positive
; run: %fcmp_uge_f64(0x1.0p-52, 0x1.0p-52) == 1
; run: %fcmp_uge_f64(0x1.fffffffffffffp1023, 0x1.fffffffffffffp1023) == 1
; run: %fcmp_uge_f64(0x1.0p-1022, 0x1.0p-1022) == 1
; run: %fcmp_uge_f64(0x1.0p-52, 0x1.fffffffffffffp1023) == 0
; run: %fcmp_uge_f64(0x1.0p-52, 0x1.0p-1022) == 1
; run: %fcmp_uge_f64(0x1.0p-1022, 0x1.fffffffffffffp1023) == 0

; Subnormals
; run: %fcmp_uge_f64(0x0.8p-1022, -0x0.8p-1022) == 1
; run: %fcmp_uge_f64(-0x0.8p-1022, 0x0.8p-1022) == 0
; run: %fcmp_uge_f64(0x0.8p-1022, 0x0.0) == 1
; run: %fcmp_uge_f64(-0x0.8p-1022, 0x0.0) == 0
; run: %fcmp_uge_f64(0x0.8p-1022, -0x0.0) == 1
; run: %fcmp_uge_f64(-0x0.8p-1022, -0x0.0) == 0
; run: %fcmp_uge_f64(0x0.0, 0x0.8p-1022) == 0
; run: %fcmp_uge_f64(0x0.0, -0x0.8p-1022) == 1
; run: %fcmp_uge_f64(-0x0.0, 0x0.8p-1022) == 0
; run: %fcmp_uge_f64(-0x0.0, -0x0.8p-1022) == 1

; NaN's
; run: %fcmp_uge_f64(+NaN, +NaN) == 1
; run: %fcmp_uge_f64(-NaN, -NaN) == 1
; run: %fcmp_uge_f64(+NaN, -NaN) == 1
; run: %fcmp_uge_f64(-NaN, +NaN) == 1

; run: %fcmp_uge_f64(+NaN, -0x1.0) == 1
; run: %fcmp_uge_f64(-NaN, -0x1.0) == 1
; run: %fcmp_uge_f64(+NaN, 0x1.0) == 1
; run: %fcmp_uge_f64(-NaN, 0x1.0) == 1
; run: %fcmp_uge_f64(+NaN, -0x0.0) == 1
; run: %fcmp_uge_f64(-NaN, -0x0.0) == 1
; run: %fcmp_uge_f64(+NaN, 0x0.0) == 1
; run: %fcmp_uge_f64(-NaN, 0x0.0) == 1
; run: %fcmp_uge_f64(+NaN, -Inf) == 1
; run: %fcmp_uge_f64(-NaN, -Inf) == 1
; run: %fcmp_uge_f64(+NaN, Inf) == 1
; run: %fcmp_uge_f64(-NaN, Inf) == 1
; run: %fcmp_uge_f64(-0x0.0, +NaN) == 1
; run: %fcmp_uge_f64(-0x0.0, -NaN) == 1
; run: %fcmp_uge_f64(0x0.0, +NaN) == 1
; run: %fcmp_uge_f64(0x0.0, -NaN) == 1
; run: %fcmp_uge_f64(-Inf, +NaN) == 1
; run: %fcmp_uge_f64(-Inf, -NaN) == 1
; run: %fcmp_uge_f64(Inf, +NaN) == 1
; run: %fcmp_uge_f64(Inf, -NaN) == 1

; run: %fcmp_uge_f64(+NaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f64(-NaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f64(+NaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f64(-NaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f64(+NaN:0x1, +NaN) == 1
; run: %fcmp_uge_f64(+NaN:0x1, -NaN) == 1
; run: %fcmp_uge_f64(-NaN:0x1, -NaN) == 1
; run: %fcmp_uge_f64(-NaN:0x1, +NaN) == 1

; run: %fcmp_uge_f64(+NaN:0x800000000001, +NaN:0x800000000001) == 1
; run: %fcmp_uge_f64(-NaN:0x800000000001, -NaN:0x800000000001) == 1
; run: %fcmp_uge_f64(+NaN:0x800000000001, -NaN:0x800000000001) == 1
; run: %fcmp_uge_f64(-NaN:0x800000000001, +NaN:0x800000000001) == 1
; run: %fcmp_uge_f64(+NaN:0x800000000001, +NaN) == 1
; run: %fcmp_uge_f64(+NaN:0x800000000001, -NaN) == 1
; run: %fcmp_uge_f64(-NaN:0x800000000001, -NaN) == 1
; run: %fcmp_uge_f64(-NaN:0x800000000001, +NaN) == 1

; sNaN's
; run: %fcmp_uge_f64(+sNaN:0x1, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(+sNaN:0x1, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, +sNaN:0x1) == 1

; run: %fcmp_uge_f64(+sNaN:0x1, -0x1.0) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, -0x1.0) == 1
; run: %fcmp_uge_f64(+sNaN:0x1, 0x1.0) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, 0x1.0) == 1
; run: %fcmp_uge_f64(+sNaN:0x1, -0x0.0) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, -0x0.0) == 1
; run: %fcmp_uge_f64(+sNaN:0x1, 0x0.0) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, 0x0.0) == 1
; run: %fcmp_uge_f64(+sNaN:0x1, -Inf) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, -Inf) == 1
; run: %fcmp_uge_f64(+sNaN:0x1, Inf) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, Inf) == 1
; run: %fcmp_uge_f64(-0x0.0, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(-0x0.0, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(0x0.0, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(0x0.0, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(-Inf, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(-Inf, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(Inf, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(Inf, -sNaN:0x1) == 1

; run: %fcmp_uge_f64(+sNaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f64(+sNaN:0x1, -NaN:0x1) == 1
; run: %fcmp_uge_f64(-sNaN:0x1, +NaN:0x1) == 1
; run: %fcmp_uge_f64(+NaN:0x1, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(-NaN:0x1, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(-NaN:0x1, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(+NaN:0x1, -sNaN:0x1) == 1

; run: %fcmp_uge_f64(+sNaN:0x800000000001, +sNaN:0x800000000001) == 1
; run: %fcmp_uge_f64(-sNaN:0x800000000001, -sNaN:0x800000000001) == 1
; run: %fcmp_uge_f64(+sNaN:0x800000000001, -sNaN:0x800000000001) == 1
; run: %fcmp_uge_f64(-sNaN:0x800000000001, +sNaN:0x800000000001) == 1
; run: %fcmp_uge_f64(+sNaN:0x800000000001, +sNaN:0x1) == 1
; run: %fcmp_uge_f64(+sNaN:0x800000000001, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(-sNaN:0x800000000001, -sNaN:0x1) == 1
; run: %fcmp_uge_f64(-sNaN:0x800000000001, +sNaN:0x1) == 1
