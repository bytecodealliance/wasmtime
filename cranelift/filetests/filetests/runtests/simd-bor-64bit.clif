test interpret
test run
target aarch64
set enable_multi_ret_implicit_sret
target riscv64 has_v
target riscv64 has_v has_c has_zcb
; s390x and x86_64 do not support 64-bit vectors.


function %bor_i8x8(i8x8, i8x8) -> i8x8 {
block0(v0:i8x8, v1:i8x8):
    v2 = bor v0, v1
    return v2
}
; run: %bor_i8x8([0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10], [0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF]) == [0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF]
; run: %bor_i8x8([0x8A 0x8A 0xAA 0xAA 0x8A 0x8A 0xAA 0xAA], [0x54 0x40 0x55 0x55 0x54 0x40 0x55 0x55]) == [0xDE 0xCA 0xFF 0xFF 0xDE 0xCA 0xFF 0xFF]


function %bor_i16x4(i16x4, i16x4) -> i16x4 {
block0(v0:i16x4, v1:i16x4):
    v2 = bor v0, v1
    return v2
}
; run: %bor_i16x4([0xFEDC 0xBA98 0x7654 0x3210], [0x0123 0x4567 0x89AB 0xCDEF]) == [0xFFFF 0xFFFF 0xFFFF 0xFFFF]
; run: %bor_i16x4([0x8A8A 0xAAAA 0x8A8A 0xAAAA], [0x5440 0x5555 0x5440 0x5555]) == [0xDECA 0xFFFF 0xDECA 0xFFFF]


function %bor_i32x2(i32x2, i32x2) -> i32x2 {
block0(v0:i32x2, v1:i32x2):
    v2 = bor v0, v1
    return v2
}
; run: %bor_i32x2([0xFEDCBA98 0x76543210], [0x01234567 0x89ABCDEF]) == [0xFFFFFFFF 0xFFFFFFFF]
; run: %bor_i32x2([0x8A8AAAAA 0x8A8AAAAA], [0x54405555 0x54405555]) == [0xDECAFFFF 0xDECAFFFF]
