test interpret
test run
target aarch64
target s390x
target x86_64
target x86_64 sse41
target x86_64 sse41 has_avx
set enable_multi_ret_implicit_sret
target riscv64 has_v
target riscv64 has_v has_c has_zcb
target pulley32
target pulley32be
target pulley64
target pulley64be

function %uwidenlow_i8x16(i8x16) -> i16x8 {
block0(v0: i8x16):
    v1 = uwiden_low v0
    return v1
}
; run: %uwidenlow_i8x16([1 -2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]) == [1 0xFE 3 4 5 6 7 8]

function %uwidenlow_i16x8(i16x8) -> i32x4 {
block0(v0: i16x8):
    v1 = uwiden_low v0
    return v1
}
; run: %uwidenlow_i16x8([1 -2 3 4 5 6 7 8]) == [1 0xFFFE 3 4]

function %uwidenlow_i32x4(i32x4) -> i64x2 {
block0(v0: i32x4):
    v1 = uwiden_low v0
    return v1
}
; run: %uwidenlow_i32x4([1 -2 3 4]) == [1 0xFFFFFFFE]


function %uwidenlow_twice_i8x16(i8x16) -> i32x4 {
block0(v0: i8x16):
    v1 = uwiden_low v0
    v2 = uwiden_low v1
    return v2
}
; run: %uwidenlow_twice_i8x16([1 -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16]) == [1 0xFE 3 0xFC]

function %uwidenlow_twice_i16x8(i16x8) -> i64x2 {
block0(v0: i16x8):
    v1 = uwiden_low v0
    v2 = uwiden_low v1
    return v2
}
; run: %uwidenlow_twice_i16x8([1 -2 3 -4 5 -6 7 -8]) == [1 0xFFFE]


function %uwidenlow_triple_i8x16(i8x16) -> i64x2 {
block0(v0: i8x16):
    v1 = uwiden_low v0
    v2 = uwiden_low v1
    v3 = uwiden_low v2
    return v3
}
; run: %uwidenlow_triple_i8x16([1 -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16]) == [1 0xFE]
