test compile precise-output
set unwind_info=false
target riscv64 has_v

function %uload8x8(i64) -> i16x8 {
block0(v0: i64):
  v1 = uload8x8 v0
  return v1
}

; VCode:
; block0:
;   vle64.v v11,0(a1) #avl=1, #vtype=(e64, m1, ta, ma)
;   vzext.vf2 v13,v11 #avl=8, #vtype=(e16, m1, ta, ma)
;   vse8.v v13,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0xf0, 0x80, 0xcd
;   .byte 0x87, 0xf5, 0x05, 0x02 ; trap: heap_oob
;   .byte 0x57, 0x70, 0x84, 0xcc
;   .byte 0xd7, 0x26, 0xb3, 0x4a
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x06, 0x05, 0x02
;   ret

function %sload8x8(i64) -> i16x8 {
block0(v0: i64):
  v1 = sload8x8 v0
  return v1
}

; VCode:
; block0:
;   vle64.v v11,0(a1) #avl=1, #vtype=(e64, m1, ta, ma)
;   vsext.vf2 v13,v11 #avl=8, #vtype=(e16, m1, ta, ma)
;   vse8.v v13,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0xf0, 0x80, 0xcd
;   .byte 0x87, 0xf5, 0x05, 0x02 ; trap: heap_oob
;   .byte 0x57, 0x70, 0x84, 0xcc
;   .byte 0xd7, 0xa6, 0xb3, 0x4a
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x06, 0x05, 0x02
;   ret

function %uload16x4(i64) -> i32x4 {
block0(v0: i64):
  v1 = uload16x4 v0
  return v1
}

; VCode:
; block0:
;   vle64.v v11,0(a1) #avl=1, #vtype=(e64, m1, ta, ma)
;   vzext.vf2 v13,v11 #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v13,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0xf0, 0x80, 0xcd
;   .byte 0x87, 0xf5, 0x05, 0x02 ; trap: heap_oob
;   .byte 0x57, 0x70, 0x02, 0xcd
;   .byte 0xd7, 0x26, 0xb3, 0x4a
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x06, 0x05, 0x02
;   ret

function %sload16x4(i64) -> i32x4 {
block0(v0: i64):
  v1 = sload16x4 v0
  return v1
}

; VCode:
; block0:
;   vle64.v v11,0(a1) #avl=1, #vtype=(e64, m1, ta, ma)
;   vsext.vf2 v13,v11 #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v13,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0xf0, 0x80, 0xcd
;   .byte 0x87, 0xf5, 0x05, 0x02 ; trap: heap_oob
;   .byte 0x57, 0x70, 0x02, 0xcd
;   .byte 0xd7, 0xa6, 0xb3, 0x4a
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x06, 0x05, 0x02
;   ret

function %uload32x2(i64) -> i64x2 {
block0(v0: i64):
  v1 = uload32x2 v0
  return v1
}

; VCode:
; block0:
;   vle64.v v11,0(a1) #avl=1, #vtype=(e64, m1, ta, ma)
;   vzext.vf2 v13,v11 #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v13,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0xf0, 0x80, 0xcd
;   .byte 0x87, 0xf5, 0x05, 0x02 ; trap: heap_oob
;   .byte 0x57, 0x70, 0x81, 0xcd
;   .byte 0xd7, 0x26, 0xb3, 0x4a
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x06, 0x05, 0x02
;   ret

function %sload32x2(i64) -> i64x2 {
block0(v0: i64):
  v1 = sload32x2 v0
  return v1
}

; VCode:
; block0:
;   vle64.v v11,0(a1) #avl=1, #vtype=(e64, m1, ta, ma)
;   vsext.vf2 v13,v11 #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v13,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0xf0, 0x80, 0xcd
;   .byte 0x87, 0xf5, 0x05, 0x02 ; trap: heap_oob
;   .byte 0x57, 0x70, 0x81, 0xcd
;   .byte 0xd7, 0xa6, 0xb3, 0x4a
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x06, 0x05, 0x02
;   ret

