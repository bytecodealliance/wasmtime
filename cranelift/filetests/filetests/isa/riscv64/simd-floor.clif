test compile precise-output
set enable_multi_ret_implicit_sret
set unwind_info=false
target riscv64 has_v


function %floor_f32x4(f32x4) -> f32x4 {
block0(v0: f32x4):
    v1 = floor v0
    return v1
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,-16(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vfabs.v v12,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui a1,307200
;   fmv.w.x fa2,a1
;   vmflt.vf v0,v12,fa2 #avl=4, #vtype=(e32, m1, ta, ma)
;   fsrmi a1,2
;   vfcvt.x.f.v v14,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   fsrm a1
;   vfcvt.f.x.v v10,v14 #avl=4, #vtype=(e32, m1, ta, ma)
;   vfsgnj.vv v11,v10,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   fmv.w.x fa3,zero
;   vfadd.vf v15,v9,fa3 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmerge.vvm v9,v15,v11,v0.t #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v9,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, sp, 0x10
;   .byte 0x87, 0x84, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x02, 0xcd
;   .byte 0x57, 0x96, 0x94, 0x2a
;   lui a1, 0x4b000
;   fmv.w.x fa2, a1
;   .byte 0x57, 0x50, 0xc6, 0x6e
;   fsrmi a1, 2
;   .byte 0x57, 0x97, 0x90, 0x4a
;   fsrm a1
;   .byte 0x57, 0x95, 0xe1, 0x4a
;   .byte 0xd7, 0x95, 0xa4, 0x22
;   fmv.w.x fa3, zero
;   .byte 0xd7, 0xd7, 0x96, 0x02
;   .byte 0xd7, 0x84, 0xf5, 0x5c
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x04, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %floor_f64x2(f64x2) -> f64x2 {
block0(v0: f64x2):
    v1 = floor v0
    return v1
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,-16(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vfabs.v v12,v9 #avl=2, #vtype=(e64, m1, ta, ma)
;   lui a1,1075
;   slli a2,a1,40
;   fmv.d.x fa4,a2
;   vmflt.vf v0,v12,fa4 #avl=2, #vtype=(e64, m1, ta, ma)
;   fsrmi a2,2
;   vfcvt.x.f.v v8,v9 #avl=2, #vtype=(e64, m1, ta, ma)
;   fsrm a2
;   vfcvt.f.x.v v11,v8 #avl=2, #vtype=(e64, m1, ta, ma)
;   vfsgnj.vv v13,v11,v9 #avl=2, #vtype=(e64, m1, ta, ma)
;   fmv.d.x fa5,zero
;   vfadd.vf v9,v9,fa5 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmerge.vvm v11,v9,v13,v0.t #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v11,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, sp, 0x10
;   .byte 0x87, 0x84, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x81, 0xcd
;   .byte 0x57, 0x96, 0x94, 0x2a
;   lui a1, 0x433
;   slli a2, a1, 0x28
;   fmv.d.x fa4, a2
;   .byte 0x57, 0x50, 0xc7, 0x6e
;   fsrmi a2, 2
;   .byte 0x57, 0x94, 0x90, 0x4a
;   fsrm a2
;   .byte 0xd7, 0x95, 0x81, 0x4a
;   .byte 0xd7, 0x96, 0xb4, 0x22
;   fmv.d.x fa5, zero
;   .byte 0xd7, 0xd4, 0x97, 0x02
;   .byte 0xd7, 0x85, 0x96, 0x5c
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x05, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

