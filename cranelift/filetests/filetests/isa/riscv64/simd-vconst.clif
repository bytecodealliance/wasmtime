test compile precise-output
set enable_multi_ret_implicit_sret
set unwind_info=false
target riscv64 has_v

function %vconst_zeroes_i8x16() -> i8x16 {
block0:
    v0 = vconst.i8x16 0x00
    return v0
}

; VCode:
; block0:
;   vle8.v v10,[const(0)] #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x08, 0xcc
;   auipc t6, 0
;   addi t6, t6, 0x1c
;   .byte 0x07, 0x85, 0x0f, 0x02
;   .byte 0x27, 0x05, 0x05, 0x02
;   ret
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00

function %vconst_ones_i8x16() -> i8x16 {
block0:
    v0 = vconst.i8x16 0xffffffffffffffff_ffffffffffffffff
    return v0
}

; VCode:
; block0:
;   vle8.v v10,[const(0)] #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x08, 0xcc
;   auipc t6, 0
;   addi t6, t6, 0x1c
;   .byte 0x07, 0x85, 0x0f, 0x02
;   .byte 0x27, 0x05, 0x05, 0x02
;   ret
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0xff, 0xff, 0xff, 0xff
;   .byte 0xff, 0xff, 0xff, 0xff
;   .byte 0xff, 0xff, 0xff, 0xff
;   .byte 0xff, 0xff, 0xff, 0xff

function %vconst_i8x16() -> i8x16 {
block0:
    v0 = vconst.i8x16 [0 31 63 95 127 159 191 255 1 2 3 4 5 6 7 8]
    return v0
}

; VCode:
; block0:
;   vle8.v v10,[const(0)] #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x08, 0xcc
;   auipc t6, 0
;   addi t6, t6, 0x1c
;   .byte 0x07, 0x85, 0x0f, 0x02
;   .byte 0x27, 0x05, 0x05, 0x02
;   ret
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x1f, 0x3f, 0x5f
;   .byte 0x7f, 0x9f, 0xbf, 0xff
;   .byte 0x01, 0x02, 0x03, 0x04
;   .byte 0x05, 0x06, 0x07, 0x08

function %vconst_i16x8() -> i16x8 {
block0:
    v0 = vconst.i16x8 [0 255 32767 65535 1 2 3 4]
    return v0
}

; VCode:
; block0:
;   vle16.v v10,[const(0)] #avl=8, #vtype=(e16, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x84, 0xcc
;   auipc t6, 0
;   addi t6, t6, 0x1c
;   .byte 0x07, 0xd5, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0x27, 0x05, 0x05, 0x02
;   ret
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0xff, 0x00
;   .byte 0xff, 0x7f, 0xff, 0xff
;   .byte 0x01, 0x00, 0x02, 0x00
;   lb zero, 0(s0)

function %vconst_i32x4() -> i32x4 {
block0:
    v0 = vconst.i32x4 [0 4294967295 1 2]
    return v0
}

; VCode:
; block0:
;   vle32.v v10,[const(0)] #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x02, 0xcd
;   auipc t6, 0
;   addi t6, t6, 0x1c
;   .byte 0x07, 0xe5, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0x27, 0x05, 0x05, 0x02
;   ret
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0xff, 0xff, 0xff, 0xff
;   .byte 0x01, 0x00, 0x00, 0x00
;   .byte 0x02, 0x00, 0x00, 0x00

function %vconst_i64x2() -> i64x2 {
block0:
    v0 = vconst.i64x2 [0 -1]
    return v0
}

; VCode:
; block0:
;   vle64.v v10,[const(0)] #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70, 0x81, 0xcd
;   auipc t6, 0
;   addi t6, t6, 0x1c
;   .byte 0x07, 0xf5, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0x27, 0x05, 0x05, 0x02
;   ret
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0xff, 0xff, 0xff, 0xff
;   .byte 0xff, 0xff, 0xff, 0xff

