test compile precise-output
set unwind_info=false
target riscv64 has_v

function %swizzle_i8x16(i8x16, i8x16) -> i8x16 {
block0(v0: i8x16, v1: i8x16):
    v2 = swizzle v0, v1
    return v2
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,-32(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vle8.v v11,-16(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vrgather.vv v14,v9,v11 #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v14,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, sp, 0x10
;   .byte 0x87, 0x84, 0x0f, 0x02
;   addi t6, sp, 0x20
;   .byte 0x87, 0x85, 0x0f, 0x02
;   .byte 0x57, 0x87, 0x95, 0x32
;   .byte 0x27, 0x07, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %swizzle_splat_i8x16(i8x16, i8) -> i8x16 {
block0(v0: i8x16, v1: i8):
    v2 = splat.i8x16 v1
    v3 = swizzle v0, v2
    return v3
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,-16(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vrgather.vx v13,v9,a1 #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v13,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, sp, 0x10
;   .byte 0x87, 0x84, 0x0f, 0x02
;   .byte 0xd7, 0xc6, 0x95, 0x32
;   .byte 0xa7, 0x06, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %swizzle_splat_const_i8x16(i8x16) -> i8x16 {
block0(v0: i8x16):
    v1 = iconst.i8 2
    v2 = splat.i8x16 v1
    v3 = swizzle v0, v2
    return v3
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,-16(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vrgather.vi v12,v9,2 #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v12,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, sp, 0x10
;   .byte 0x87, 0x84, 0x0f, 0x02
;   .byte 0x57, 0x36, 0x91, 0x32
;   .byte 0x27, 0x06, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

