test compile precise-output
set enable_multi_ret_implicit_sret
set unwind_info=false
target riscv64 has_v

function %fmin_f64x2(f64x2, f64x2) -> f64x2 {
block0(v0: f64x2, v1: f64x2):
    v2 = fmin v0, v1
    return v2
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,-32(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vle8.v v11,-16(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vmfeq.vv v14,v9,v9 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmfeq.vv v8,v11,v11 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmand.mm v0,v14,v8 #avl=2, #vtype=(e64, m1, ta, ma)
;   lui a1,4095
;   slli a2,a1,39
;   vmv.v.x v8,a2 #avl=2, #vtype=(e64, m1, ta, ma)
;   vfmin.vv v10,v9,v11 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmerge.vvm v12,v8,v10,v0.t #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v12,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, sp, 0x10
;   .byte 0x87, 0x84, 0x0f, 0x02
;   addi t6, sp, 0x20
;   .byte 0x87, 0x85, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x81, 0xcd
;   .byte 0x57, 0x97, 0x94, 0x62
;   .byte 0x57, 0x94, 0xb5, 0x62
;   .byte 0x57, 0x20, 0xe4, 0x66
;   lui a1, 0xfff
;   slli a2, a1, 0x27
;   .byte 0x57, 0x44, 0x06, 0x5e
;   .byte 0x57, 0x95, 0x95, 0x12
;   .byte 0x57, 0x06, 0x85, 0x5c
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0x27, 0x06, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %fmin_f32x4(f32x4, f32x4) -> f32x4 {
block0(v0: f32x4, v1: f32x4):
    v2 = fmin v0, v1
    return v2
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,-32(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vle8.v v11,-16(incoming_arg) #avl=16, #vtype=(e8, m1, ta, ma)
;   vmfeq.vv v14,v9,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmfeq.vv v8,v11,v11 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmand.mm v0,v14,v8 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui a1,523264
;   vmv.v.x v14,a1 #avl=4, #vtype=(e32, m1, ta, ma)
;   vfmin.vv v8,v9,v11 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmerge.vvm v10,v14,v8,v0.t #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, sp, 0x10
;   .byte 0x87, 0x84, 0x0f, 0x02
;   addi t6, sp, 0x20
;   .byte 0x87, 0x85, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x02, 0xcd
;   .byte 0x57, 0x97, 0x94, 0x62
;   .byte 0x57, 0x94, 0xb5, 0x62
;   .byte 0x57, 0x20, 0xe4, 0x66
;   lui a1, 0x7fc00
;   .byte 0x57, 0xc7, 0x05, 0x5e
;   .byte 0x57, 0x94, 0x95, 0x12
;   .byte 0x57, 0x05, 0xe4, 0x5c
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0x27, 0x05, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

