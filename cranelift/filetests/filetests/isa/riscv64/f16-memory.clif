test compile precise-output
target riscv64 has_zfhmin

function %f16_load(i16) -> f16 {
    ss0 = explicit_slot 4

block0(v0: i16):
    stack_store.i16 v0, ss0+2
    
    v1 = stack_load.f16 ss0+2
    return v1
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
;   addi sp,sp,-16
; block0:
;   sh a0,2(slot)
;   flh fa0,2(slot)
;   addi sp,sp,16
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
;   addi sp, sp, -0x10
; block1: ; offset 0x14
;   sh a0, 2(sp)
;   .byte 0x07, 0x15, 0x21, 0x00
;   addi sp, sp, 0x10
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %f16_store(f16) -> i16 {
    ss0 = explicit_slot 4

block0(v0: f16):
    stack_store.f16 v0, ss0+2
    
    v1 = stack_load.i16 ss0+2
    return v1
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
;   addi sp,sp,-16
; block0:
;   fsh fa0,2(slot)
;   lh a0,2(slot)
;   addi sp,sp,16
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
;   addi sp, sp, -0x10
; block1: ; offset 0x14
;   .byte 0x27, 0x11, 0xa1, 0x00
;   lh a0, 2(sp)
;   addi sp, sp, 0x10
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %f16_roundtrip(f16) -> f16 {
    ss0 = explicit_slot 2

block0(v0: f16):
    stack_store.f16 v0, ss0
    v1 = stack_load.f16 ss0
    return v1
}

; VCode:
;   addi sp,sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
;   addi sp,sp,-16
; block0:
;   fsh fa0,0(slot)
;   flh fa0,0(slot)
;   addi sp,sp,16
;   ld ra,8(sp)
;   ld fp,0(sp)
;   addi sp,sp,16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   mv s0, sp
;   addi sp, sp, -0x10
; block1: ; offset 0x14
;   .byte 0x27, 0x10, 0xa1, 0x00
;   .byte 0x07, 0x15, 0x01, 0x00
;   addi sp, sp, 0x10
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

