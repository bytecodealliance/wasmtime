test compile precise-output
target s390x arch13

function %fcvt_to_uint_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_uint.i8 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wclfeb %v20, %f0, 0, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   vclgd %v20, %v0, 2, 8, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   ic %r8, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r8, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_sint.i8 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wcfeb %v20, %f0, 0, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   vcgd %v20, %v0, 2, 8, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   ic %r0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0xc3, 0x01
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_uint_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_uint.i16 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wclfeb %v20, %f0, 0, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   vclgd %v20, %v0, 2, 8, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   be 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r8, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_sint.i16 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wcfeb %v20, %f0, 0, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   vcgd %v20, %v0, 2, 8, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   bc 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   bpp 0, 0x50, 0x100
;   .byte 0x00, 0x00

function %fcvt_to_uint_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_uint.i32 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wclfeb %v20, %f0, 0, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   vclgd %v20, %v0, 2, 8, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   cvb %r8, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r8, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_sint.i32 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wcfeb %v20, %f0, 0, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   vcgd %v20, %v0, 2, 8, 5
;   vlgvf %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   cvb %r0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0xcf, 0x00
;   .byte 0x00, 0x01
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_uint_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_uint.i64 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wldeb %v20, %f0
;   wclgdb %v22, %v20, 0, 5
;   vlgvg %r2, %v22, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x50
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x58
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wldeb %v20, %f0
;   wclgdb %v22, %v20, 0, 5
;   vlgvg %r2, %v22, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   sl %r8, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r8, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_sint.i64 v0
  return v1
}

; VCode:
; block0:
;   cebr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wldeb %v20, %f0
;   wcgdb %v22, %v20, 0, 5
;   vlgvg %r2, %v22, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cebr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x50
;   le %f4, 0(%r1)
;   cebr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x58
;   vlef %v16, 0(%r1), 0
;   wfcsb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wldeb %v20, %f0
;   wcgdb %v22, %v20, 0, 5
;   vlgvg %r2, %v22, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   sl %r0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   edmk 1(1), 0
;   .byte 0x00, 0x00

function %fcvt_to_uint_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_uint.i8 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   sth %r7, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r15, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_sint.i8 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   sth %r6, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   larl %r6, 0x40000050
;   .byte 0x00, 0x00

function %fcvt_to_uint_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_uint.i16 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   sth %r15, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r15, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_sint.i16 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   sth %r14, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   larl %r14, 0x400050
;   .byte 0x00, 0x00

function %fcvt_to_uint_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_uint.i32 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   la %r15, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r15, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_sint.i32 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   la %r14, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0xc1, 0xe0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x20
;   .byte 0x00, 0x00

function %fcvt_to_uint_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_uint.i64 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wclgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   ic %r15, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   icm %r15, 0, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00

function %fcvt_to_sint_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_sint.i64 v0
  return v1
}

; VCode:
; block0:
;   cdbr %f0, %f0
;   jgo .+2 # trap=bad_toint
;   larl %r1, [const(0)] ; ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe .+2 # trap=int_ovf
;   larl %r1, [const(1)] ; vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle .+2 # trap=int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   cdbr %f0, %f0
;   jgo 6 ; trap: bad_toint
;   larl %r1, 0x48
;   ld %f4, 0(%r1)
;   cdbr %f0, %f4
;   jghe 0x1a ; trap: int_ovf
;   larl %r1, 0x50
;   vleg %v16, 0(%r1), 0
;   wfcdb %f0, %v16
;   jgle 0x32 ; trap: int_ovf
;   wcgdb %v20, %f0, 0, 5
;   vlgvg %r2, %v20, 0
;   br %r14
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   ic %r14, 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0xc3, 0xe0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0x00, 0x01

function %fcvt_from_uint_i8_f32(i8) -> f32 {
block0(v0: i8):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; VCode:
; block0:
;   llcr %r4, %r2
;   vlvgf %v4, %r4, 0
;   wcelfb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   llcr %r4, %r2
;   vlvgf %v4, %r4, 0
;   vcdlg %v0, %v4, 2, 8, 4
;   br %r14

function %fcvt_from_sint_i8_f32(i8) -> f32 {
block0(v0: i8):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; VCode:
; block0:
;   lbr %r4, %r2
;   vlvgf %v4, %r4, 0
;   wcefb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   lbr %r4, %r2
;   vlvgf %v4, %r4, 0
;   vcdg %v0, %v4, 2, 8, 4
;   br %r14

function %fcvt_from_uint_i16_f32(i16) -> f32 {
block0(v0: i16):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; VCode:
; block0:
;   llhr %r4, %r2
;   vlvgf %v4, %r4, 0
;   wcelfb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   llhr %r4, %r2
;   vlvgf %v4, %r4, 0
;   vcdlg %v0, %v4, 2, 8, 4
;   br %r14

function %fcvt_from_sint_i16_f32(i16) -> f32 {
block0(v0: i16):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; VCode:
; block0:
;   lhr %r4, %r2
;   vlvgf %v4, %r4, 0
;   wcefb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   lhr %r4, %r2
;   vlvgf %v4, %r4, 0
;   vcdg %v0, %v4, 2, 8, 4
;   br %r14

function %fcvt_from_uint_i32_f32(i32) -> f32 {
block0(v0: i32):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; VCode:
; block0:
;   vlvgf %v2, %r2, 0
;   wcelfb %f0, %f2, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vlvgf %v2, %r2, 0
;   vcdlg %v0, %v2, 2, 8, 4
;   br %r14

function %fcvt_from_sint_i32_f32(i32) -> f32 {
block0(v0: i32):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; VCode:
; block0:
;   vlvgf %v2, %r2, 0
;   wcefb %f0, %f2, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vlvgf %v2, %r2, 0
;   vcdg %v0, %v2, 2, 8, 4
;   br %r14

function %fcvt_from_uint_i64_f32(i64) -> f32 {
block0(v0: i64):
  v1 = fcvt_from_uint.f32 v0
  return v1
}

; VCode:
; block0:
;   ldgr %f2, %r2
;   wcdlgb %f4, %f2, 0, 3
;   ledbra %f0, 4, %f4, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   ldgr %f2, %r2
;   wcdlgb %f4, %f2, 0, 3
;   ledbra %f0, 4, %f4, 0
;   br %r14

function %fcvt_from_sint_i64_f32(i64) -> f32 {
block0(v0: i64):
  v1 = fcvt_from_sint.f32 v0
  return v1
}

; VCode:
; block0:
;   ldgr %f2, %r2
;   wcdgb %f4, %f2, 0, 3
;   ledbra %f0, 4, %f4, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   ldgr %f2, %r2
;   wcdgb %f4, %f2, 0, 3
;   ledbra %f0, 4, %f4, 0
;   br %r14

function %fcvt_from_uint_i8_f64(i8) -> f64 {
block0(v0: i8):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; VCode:
; block0:
;   llgcr %r4, %r2
;   ldgr %f4, %r4
;   wcdlgb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   llgcr %r4, %r2
;   ldgr %f4, %r4
;   wcdlgb %f0, %f4, 0, 4
;   br %r14

function %fcvt_from_sint_i8_f64(i8) -> f64 {
block0(v0: i8):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; VCode:
; block0:
;   lgbr %r4, %r2
;   ldgr %f4, %r4
;   wcdgb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   lgbr %r4, %r2
;   ldgr %f4, %r4
;   wcdgb %f0, %f4, 0, 4
;   br %r14

function %fcvt_from_uint_i16_f64(i16) -> f64 {
block0(v0: i16):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; VCode:
; block0:
;   llghr %r4, %r2
;   ldgr %f4, %r4
;   wcdlgb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   llghr %r4, %r2
;   ldgr %f4, %r4
;   wcdlgb %f0, %f4, 0, 4
;   br %r14

function %fcvt_from_sint_i16_f64(i16) -> f64 {
block0(v0: i16):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; VCode:
; block0:
;   lghr %r4, %r2
;   ldgr %f4, %r4
;   wcdgb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   lghr %r4, %r2
;   ldgr %f4, %r4
;   wcdgb %f0, %f4, 0, 4
;   br %r14

function %fcvt_from_uint_i32_f64(i32) -> f64 {
block0(v0: i32):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; VCode:
; block0:
;   llgfr %r4, %r2
;   ldgr %f4, %r4
;   wcdlgb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   llgfr %r4, %r2
;   ldgr %f4, %r4
;   wcdlgb %f0, %f4, 0, 4
;   br %r14

function %fcvt_from_sint_i32_f64(i32) -> f64 {
block0(v0: i32):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; VCode:
; block0:
;   lgfr %r4, %r2
;   ldgr %f4, %r4
;   wcdgb %f0, %f4, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   lgfr %r4, %r2
;   ldgr %f4, %r4
;   wcdgb %f0, %f4, 0, 4
;   br %r14

function %fcvt_from_uint_i64_f64(i64) -> f64 {
block0(v0: i64):
  v1 = fcvt_from_uint.f64 v0
  return v1
}

; VCode:
; block0:
;   ldgr %f2, %r2
;   wcdlgb %f0, %f2, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   ldgr %f2, %r2
;   wcdlgb %f0, %f2, 0, 4
;   br %r14

function %fcvt_from_sint_i64_f64(i64) -> f64 {
block0(v0: i64):
  v1 = fcvt_from_sint.f64 v0
  return v1
}

; VCode:
; block0:
;   ldgr %f2, %r2
;   wcdgb %f0, %f2, 0, 4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   ldgr %f2, %r2
;   wcdgb %f0, %f2, 0, 4
;   br %r14

function %fcvt_to_uint_sat_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i8 v0
  return v1
}

; VCode:
; block0:
;   wclfeb %f2, %f0, 0, 5
;   vlgvf %r2, %v2, 0
;   clfi %r2, 256
;   lochih %r2, 255
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vclgd %v2, %v0, 2, 8, 5
;   vlgvf %r2, %v2, 0
;   clfi %r2, 0x100
;   lochih %r2, 0xff
;   br %r14

function %fcvt_to_sint_sat_f32_i8(f32) -> i8 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i8 v0
  return v1
}

; VCode:
; block0:
;   wcfeb %f2, %f0, 0, 5
;   vlgvf %r2, %v2, 0
;   cebr %f0, %f0
;   lochio %r2, 0
;   chi %r2, 127
;   lochih %r2, 127
;   chi %r2, -128
;   lochil %r2, -128
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vcgd %v2, %v0, 2, 8, 5
;   vlgvf %r2, %v2, 0
;   cebr %f0, %f0
;   lochio %r2, 0
;   chi %r2, 0x7f
;   lochih %r2, 0x7f
;   chi %r2, -0x80
;   lochil %r2, -0x80
;   br %r14

function %fcvt_to_uint_sat_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i16 v0
  return v1
}

; VCode:
; block0:
;   wclfeb %f2, %f0, 0, 5
;   vlgvf %r2, %v2, 0
;   clfi %r2, 65535
;   lochih %r2, -1
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vclgd %v2, %v0, 2, 8, 5
;   vlgvf %r2, %v2, 0
;   clfi %r2, 0xffff
;   lochih %r2, -1
;   br %r14

function %fcvt_to_sint_sat_f32_i16(f32) -> i16 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i16 v0
  return v1
}

; VCode:
; block0:
;   wcfeb %f2, %f0, 0, 5
;   vlgvf %r2, %v2, 0
;   cebr %f0, %f0
;   lochio %r2, 0
;   chi %r2, 32767
;   lochih %r2, 32767
;   chi %r2, -32768
;   lochil %r2, -32768
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vcgd %v2, %v0, 2, 8, 5
;   vlgvf %r2, %v2, 0
;   cebr %f0, %f0
;   lochio %r2, 0
;   chi %r2, 0x7fff
;   lochih %r2, 0x7fff
;   chi %r2, -0x8000
;   lochil %r2, -0x8000
;   br %r14

function %fcvt_to_uint_sat_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i32 v0
  return v1
}

; VCode:
; block0:
;   wclfeb %f2, %f0, 0, 5
;   vlgvf %r2, %v2, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vclgd %v2, %v0, 2, 8, 5
;   vlgvf %r2, %v2, 0
;   br %r14

function %fcvt_to_sint_sat_f32_i32(f32) -> i32 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i32 v0
  return v1
}

; VCode:
; block0:
;   wcfeb %f2, %f0, 0, 5
;   vlgvf %r2, %v2, 0
;   cebr %f0, %f0
;   lochio %r2, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   vcgd %v2, %v0, 2, 8, 5
;   vlgvf %r2, %v2, 0
;   cebr %f0, %f0
;   lochio %r2, 0
;   br %r14

function %fcvt_to_uint_sat_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_uint_sat.i64 v0
  return v1
}

; VCode:
; block0:
;   ldebr %f2, %f0
;   wclgdb %f4, %f2, 0, 5
;   lgdr %r2, %f4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   ldebr %f2, %f0
;   wclgdb %f4, %f2, 0, 5
;   lgdr %r2, %f4
;   br %r14

function %fcvt_to_sint_sat_f32_i64(f32) -> i64 {
block0(v0: f32):
  v1 = fcvt_to_sint_sat.i64 v0
  return v1
}

; VCode:
; block0:
;   ldebr %f2, %f0
;   wcgdb %f4, %f2, 0, 5
;   lgdr %r2, %f4
;   cebr %f0, %f0
;   locghio %r2, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   ldebr %f2, %f0
;   wcgdb %f4, %f2, 0, 5
;   lgdr %r2, %f4
;   cebr %f0, %f0
;   locghio %r2, 0
;   br %r14

function %fcvt_to_uint_sat_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i8 v0
  return v1
}

; VCode:
; block0:
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   clgfi %r2, 256
;   locghih %r2, 255
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   clgfi %r2, 0x100
;   locghih %r2, 0xff
;   br %r14

function %fcvt_to_sint_sat_f64_i8(f64) -> i8 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i8 v0
  return v1
}

; VCode:
; block0:
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   cghi %r2, 127
;   locghih %r2, 127
;   cghi %r2, -128
;   locghil %r2, -128
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   cghi %r2, 0x7f
;   locghih %r2, 0x7f
;   cghi %r2, -0x80
;   locghil %r2, -0x80
;   br %r14

function %fcvt_to_uint_sat_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i16 v0
  return v1
}

; VCode:
; block0:
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   clgfi %r2, 65535
;   locghih %r2, -1
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   clgfi %r2, 0xffff
;   locghih %r2, -1
;   br %r14

function %fcvt_to_sint_sat_f64_i16(f64) -> i16 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i16 v0
  return v1
}

; VCode:
; block0:
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   cghi %r2, 32767
;   locghih %r2, 32767
;   cghi %r2, -32768
;   locghil %r2, -32768
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   cghi %r2, 0x7fff
;   locghih %r2, 0x7fff
;   cghi %r2, -0x8000
;   locghil %r2, -0x8000
;   br %r14

function %fcvt_to_uint_sat_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i32 v0
  return v1
}

; VCode:
; block0:
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   llilf %r4, 4294967295
;   clgr %r2, %r4
;   locgrh %r2, %r4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   llilf %r4, 0xffffffff
;   clgr %r2, %r4
;   locgrh %r2, %r4
;   br %r14

function %fcvt_to_sint_sat_f64_i32(f64) -> i32 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i32 v0
  return v1
}

; VCode:
; block0:
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   lgfi %r3, 2147483647
;   cgr %r2, %r3
;   locgrh %r2, %r3
;   lgfi %r4, -2147483648
;   cgr %r2, %r4
;   locgrl %r2, %r4
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   lgfi %r3, 0x7fffffff
;   cgr %r2, %r3
;   locgrh %r2, %r3
;   lgfi %r4, -0x80000000
;   cgr %r2, %r4
;   locgrl %r2, %r4
;   br %r14

function %fcvt_to_uint_sat_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_uint_sat.i64 v0
  return v1
}

; VCode:
; block0:
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wclgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   br %r14

function %fcvt_to_sint_sat_f64_i64(f64) -> i64 {
block0(v0: f64):
  v1 = fcvt_to_sint_sat.i64 v0
  return v1
}

; VCode:
; block0:
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   wcgdb %f2, %f0, 0, 5
;   lgdr %r2, %f2
;   cdbr %f0, %f0
;   locghio %r2, 0
;   br %r14

