test compile precise-output
target x86_64

function %f0(i64) -> i64 {
block0(v0: i64):
  v1 = bswap v0
  return v1
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   movq %rdi, %rax
;   bswapq %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %rdi, %rax
;   bswapq %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f1(i32) -> i32 {
block0(v0: i32):
  v1 = bswap v0
  return v1
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   movq %rdi, %rax
;   bswapl %eax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %rdi, %rax
;   bswapl %eax
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f2(i16) -> i16 {
block0(v0: i16):
  v1 = bswap v0
  return v1
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   movq %rdi, %rax
;   rolw $0x8, %ax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %rdi, %rax
;   rolw $8, %ax
;   movq %rbp, %rsp
;   popq %rbp
;   retq

