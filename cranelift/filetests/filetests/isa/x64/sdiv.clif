test compile precise-output
target x86_64

function %f1(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   movq %rdi, %rax
;   cbtw  ;; implicit: %ax
;   testb %sil, %sil
;   jz #trap=int_divz
;   idivb %sil ;; implicit: %ax, trap=252
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %rdi, %rax
;   cbtw
;   testb %sil, %sil
;   je 0x1a
;   idivb %sil ; trap: int_ovf
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;   ud2 ; trap: int_divz

function %f2(i16, i16) -> i16 {
block0(v0: i16, v1: i16):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   movq %rdi, %rax
;   cwtd  ;; implicit: %dx, %ax
;   testw %si, %si
;   jz #trap=int_divz
;   idivw %si ;; implicit: %ax, %dx, trap=252
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %rdi, %rax
;   cwtd
;   testw %si, %si
;   je 0x1a
;   idivw %si ; trap: int_ovf
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;   ud2 ; trap: int_divz

function %f3(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   movq %rdi, %rax
;   cltd  ;; implicit: %edx, %eax
;   testl %esi, %esi
;   jz #trap=int_divz
;   idivl %esi ;; implicit: %eax, %edx, trap=252
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %rdi, %rax
;   cltd
;   testl %esi, %esi
;   je 0x17
;   idivl %esi ; trap: int_ovf
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;   ud2 ; trap: int_divz

function %f4(i64, i64) -> i64 {
block0(v0: i64, v1: i64):
  v2 = sdiv v0, v1
  return v2
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   movq %rdi, %rax
;   cqto  ;; implicit: %rdx, %rax
;   testq %rsi, %rsi
;   jz #trap=int_divz
;   idivq %rsi ;; implicit: %rax, %rdx, trap=252
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq %rdi, %rax
;   cqto
;   testq %rsi, %rsi
;   je 0x1a
;   idivq %rsi ; trap: int_ovf
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;   ud2 ; trap: int_divz

