test compile precise-output
target x86_64

function %f1(f32, f32) -> f32 {
block0(v0: f32, v1: f32):
  v2 = fcopysign v0, v1
  return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movl    $-2147483648, %ecx
;   movd    %ecx, %xmm7
;   movdqa  %xmm0, %xmm2
;   movdqa  %xmm7, %xmm0
;   andnps  %xmm0, %xmm2, %xmm0
;   andps   %xmm7, %xmm1, %xmm7
;   orps    %xmm0, %xmm7, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movl $0x80000000, %ecx
;   movd %ecx, %xmm7
;   movdqa %xmm0, %xmm2
;   movdqa %xmm7, %xmm0
;   andnps %xmm2, %xmm0
;   andps %xmm1, %xmm7
;   orps %xmm7, %xmm0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f1(f64, f64) -> f64 {
block0(v0: f64, v1: f64):
  v2 = fcopysign v0, v1
  return v2
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movabsq $-9223372036854775808, %rcx
;   movq    %rcx, %xmm7
;   movdqa  %xmm0, %xmm2
;   movdqa  %xmm7, %xmm0
;   andnpd  %xmm0, %xmm2, %xmm0
;   andpd   %xmm7, %xmm1, %xmm7
;   orpd %xmm7, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movabsq $9223372036854775808, %rcx
;   movq %rcx, %xmm7
;   movdqa %xmm0, %xmm2
;   movdqa %xmm7, %xmm0
;   andnpd %xmm2, %xmm0
;   andpd %xmm1, %xmm7
;   orpd %xmm7, %xmm0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

