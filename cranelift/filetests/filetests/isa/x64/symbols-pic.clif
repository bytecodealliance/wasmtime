test compile precise-output
set is_pic
target x86_64

function %func_addr() -> i64 {
    fn0 = %func0(i64) -> i64

block0:
    v0 = func_addr.i64 fn0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %func0+0, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %func0 -4
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %colocated_func_addr() -> i64 {
    fn0 = colocated %func0(i64) -> i64

block0:
    v0 = func_addr.i64 fn0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %func0+0, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %func0 -4
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %symbol_value() -> i64 {
    gv0 = symbol %global0

block0:
    v0 = symbol_value.i64 gv0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %global0+0, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %global0 -4
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %symbol_value_plus_offset() -> i64 {
    gv0 = symbol %global0+123

block0:
    v0 = symbol_value.i64 gv0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %global0+123, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %global0 -4
;   addq $0x7b, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %symbol_value_minus_offset() -> i64 {
    gv0 = symbol %global0-123

block0:
    v0 = symbol_value.i64 gv0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %global0+-123, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %global0 -4
;   addq $-0x7b, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %colocated_symbol_value() -> i64 {
    gv0 = symbol colocated %global0

block0:
    v0 = symbol_value.i64 gv0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %global0+0, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %global0 -4
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %colocated_symbol_value_plus_offset() -> i64 {
    gv0 = symbol colocated %global0+123

block0:
    v0 = symbol_value.i64 gv0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %global0+123, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %global0 -4
;   addq $0x7b, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %colocated_symbol_value_minus_offset() -> i64 {
    gv0 = symbol colocated %global0-123

block0:
    v0 = symbol_value.i64 gv0
    return v0
}

; VCode:
;   pushq %rbp
;   movq %rsp, %rbp
; block0:
;   load_ext_name %global0+-123, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movq (%rip), %rax ; reloc_external GOTPCRel4 %global0 -4
;   addq $-0x7b, %rax
;   movq %rbp, %rsp
;   popq %rbp
;   retq

