test compile precise-output
target x86_64

function %f1(f32) -> f32 {
block0(v0: f32):
  v1 = fneg v0
  return v1
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movl    $-2147483648, %eax
;   movd    %eax, %xmm4
;   xorps %xmm4, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movl $0x80000000, %eax
;   movd %eax, %xmm4
;   xorps %xmm4, %xmm0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f2(f64) -> f64 {
block0(v0: f64):
  v1 = fneg v0
  return v1
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movabsq $-9223372036854775808, %rax
;   movq    %rax, %xmm4
;   xorpd %xmm4, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movabsq $9223372036854775808, %rax
;   movq %rax, %xmm4
;   xorpd %xmm4, %xmm0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f3(f32x4) -> f32x4 {
block0(v0: f32x4):
  v1 = fneg v0
  return v1
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   uninit  %xmm4
;   pcmpeqd %xmm4, %xmm4, %xmm4
;   pslld   %xmm4, $31, %xmm4
;   xorps %xmm4, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   pcmpeqd %xmm4, %xmm4
;   pslld $0x1f, %xmm4
;   xorps %xmm4, %xmm0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

function %f4(f64x2) -> f64x2 {
block0(v0: f64x2):
  v1 = fneg v0
  return v1
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   uninit  %xmm4
;   pcmpeqd %xmm4, %xmm4, %xmm4
;   psllq   %xmm4, $63, %xmm4
;   xorpd %xmm4, %xmm0
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   pcmpeqd %xmm4, %xmm4
;   psllq $0x3f, %xmm4
;   xorpd %xmm4, %xmm0
;   movq %rbp, %rsp
;   popq %rbp
;   retq

