test inline precise-output
target x86_64

function %f0(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
    v2 = iconst.i32 0
    jump block1(v2, v2)

block1(v3: i32, v4: i32):
    v5 = icmp eq v1, v4
    brif v4, block3, block2

block2:
    v6 = iadd v3, v0
    v7 = iconst.i32 1
    v8 = iadd v4, v7
    jump block1(v6, v8)

block3:
    return v3
}

; (no functions inlined into %f0)

function %f1() -> i32 {
    fn0 = %f0(i32, i32) -> i32
block0:
    v0 = iconst.i32 42
    v1 = iconst.i32 10
    v2 = call fn0(v0, v1)
    return v2
}

; function %f1() -> i32 fast {
;     sig0 = (i32, i32) -> i32 fast
;     fn0 = %f0 sig0
;
; block0:
;     v0 = iconst.i32 42
;     v1 = iconst.i32 10
;     jump block1
;
; block1:
;     v6 = iconst.i32 0
;     jump block2(v6, v6)  ; v6 = 0, v6 = 0
;
; block2(v3: i32, v4: i32):
;     v7 = icmp.i32 eq v1, v4  ; v1 = 10
;     brif v4, block4, block3
;
; block3:
;     v8 = iadd.i32 v3, v0  ; v0 = 42
;     v9 = iconst.i32 1
;     v10 = iadd.i32 v4, v9  ; v9 = 1
;     jump block2(v8, v10)
;
; block4:
;     jump block5(v3)
;
; block5(v5: i32):
;     v2 -> v5
;     return v2
; }
