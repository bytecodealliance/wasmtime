test optimize precise-output
set opt_level=speed
target x86_64

function %fold_three_selects1(i8, i8, i8, i8) -> i8 {
block0(v0: i8, v1: i8, v2: i8, v3: i8):
    v5 = select v0, v3, v2
    v4 = select v1, v2, v3
    v6 = select v0, v4, v5
    return v6
}

; function %fold_three_selects1(i8, i8, i8, i8) -> i8 fast {
; block0(v0: i8, v1: i8, v2: i8, v3: i8):
;     v4 = select v1, v2, v3
;     v7 = select v0, v4, v2
;     return v7
; }



function %fold_three_selects2(i8, i8, i16, i16) -> i16 {
block0(v0: i8, v1: i8, v2: i16, v3: i16):
    v5 = select v0, v3, v2
    v4 = select v1, v2, v3
    v6 = select v0, v4, v5
    return v6
}

; function %fold_three_selects2(i8, i8, i16, i16) -> i16 fast {
; block0(v0: i8, v1: i8, v2: i16, v3: i16):
;     v4 = select v1, v2, v3
;     v7 = select v0, v4, v2
;     return v7
; }



function %fold_three_selects3(i8, i8, i32, i32) -> i32 {
block0(v0: i8, v1: i8, v2: i32, v3: i32):
    v5 = select v0, v3, v2
    v4 = select v1, v2, v3
    v6 = select v0, v4, v5
    return v6
}

; function %fold_three_selects3(i8, i8, i32, i32) -> i32 fast {
; block0(v0: i8, v1: i8, v2: i32, v3: i32):
;     v4 = select v1, v2, v3
;     v7 = select v0, v4, v2
;     return v7
; }



function %fold_three_selects4(i8, i8, i64, i64) -> i64 {
block0(v0: i8, v1: i8, v2: i64, v3: i64):
    v5 = select v0, v3, v2
    v4 = select v1, v2, v3
    v6 = select v0, v4, v5
    return v6
}

; function %fold_three_selects4(i8, i8, i64, i64) -> i64 fast {
; block0(v0: i8, v1: i8, v2: i64, v3: i64):
;     v4 = select v1, v2, v3
;     v7 = select v0, v4, v2
;     return v7
; }



